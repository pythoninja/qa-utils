version: "3.7"

services:
  reverse-proxy:
    image: traefik:2.0
    command:
      - "--global.sendAnonymousUsage=false"
      - "--log.level=${LOG_LEVEL:-INFO}"
      - "--log.format=common"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesResolvers.letsencrypt.acme.httpChallenge.entryPoint=web"
      - "--certificatesResolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.letsencrypt.acme.email=${ACME_EMAIL_ADDRESS}"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${PWD}/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
    env_file:
      - ./.env

  qa-utils-webapp:
    image: pythoninja/qa-utils:latest
    container_name: "qa-utils-webapp"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.qa-https.redirectscheme.scheme=https"
      - "traefik.http.routers.qa-http.entrypoints=web"
      - "traefik.http.routers.qa-http.rule=Host(`${APP_HOSTNAME}`)"
      - "traefik.http.routers.qa-http.middlewares=qa-https@docker"
      - "traefik.http.routers.qa-https.entrypoints=websecure"
      - "traefik.http.routers.qa-https.rule=Host(`${APP_HOSTNAME}`)"
      - "traefik.http.routers.qa-https.tls=true"
      - "traefik.http.routers.qa-https.tls.certresolver=letsencrypt"
    expose:
      - 8080
    restart: on-failure
    env_file:
      - ./.env
