version: v1.0
name: Run tests
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Install dependencies
    dependencies: []
    task:
      env_vars:
        - name: MAVEN_OPTS
          value: '-Dmaven.repo.local=.m2'
      jobs:
        - name: Maven install and cache
          commands:
            - sem-version java 11
            - checkout
            - cache restore
            - 'mvn -q dependency:go-offline test-compile'
            - cache store
        - name: npm install and cache
          commands:
            - checkout
            - cache restore
            - npm ci
            - cache store
        - name: Login to Docker Hub
          commands:
            - cache delete docker-credential
            - >-
              echo "$DOCKER_HUB_TOKEN" | docker login --username
              $DOCKER_HUB_USERNAME --password-stdin
            - >-
              echo "$GCR_TOKEN" | docker login ghcr.io --username
              $GITHUB_USERNAME --password-stdin
            - cache store docker-credential /home/semaphore/.docker/config.json
      secrets:
        - name: Docker Hub Token
        - name: Github Container Registry
  - name: Run tests
    dependencies:
      - Install dependencies
    task:
      env_vars:
        - name: MAVEN_OPTS
          value: '-Dmaven.repo.local=.m2'
        - name: FAKEDATA_DATABASE_URL
          value: 'postgresql://postgres:postgres@localhost:5432/fakedata_test'
      prologue:
        commands:
          - sem-version java 11
          - sem-service start postgres 13 --username=postgres --password=password --db=fakedata_test
          - checkout
          - cache restore
          - cache restore docker-credential
      jobs:
        - name: Unit test
          commands:
            - docker run --network host --rm --env "FAKEDATA_DATABASE_URL=$FAKEDATA_DATABASE_URL" ghcr.io/randomicu/fakedata-database:latest
            - mvn --batch-mode --file pom.xml -Dspring.profiles.active=test,ci test
promotions:
  - name: Build production image 
    pipeline_file: production-deploy.yml
    auto_promote:
      when: "result = 'passed' and tag =~ '.*'"
execution_time_limit:
  minutes: 5
